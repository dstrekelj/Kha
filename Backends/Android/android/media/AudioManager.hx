package android.media;

extern class AudioManager {
	public static var ACTION_AUDIO_BECOMING_NOISY: String;
	public static var ACTION_SCO_AUDIO_STATE_CHANGED: String;
	public static var ADJUST_LOWER: Int;
	public static var ADJUST_SAME: Int;
	public static var AUDIOFOCUS_GAIN: Int;
	public static var AUDIOFOCUS_GAIN_TRANSIENT: Int;
	public static var AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK: Int;
	public static var AUDIOFOCUS_LOSS: Int;
	public static var AUDIOFOCUS_LOSS_TRANSIENT: Int;
	public static var AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK: Int;
	public static var AUDIOFOCUS_REQUEST_FAILED: Int;
	public static var AUDIOFOCUS_REQUEST_GRANTED: Int;
	public static var EXTRA_RINGER_MODE: String;
	public static var EXTRA_SCO_AUDIO_STATE: String;
	public static var FLAG_ALLOW_RINGER_MODES: Int;
	public static var FLAG_PLAY_SOUND: Int;
	public static var FLAG_REMOVE_SOUND_AND_VIBRATE: Int;
	public static var FLAG_SHOW_UI: Int;
	public static var FLAG_VIBRATE: Int;
	public static var FX_FOCUS_NAVIGATION_DOWN: Int;
	public static var FX_FOCUS_NAVIGATION_LEFT: Int;
	public static var FX_FOCUS_NAVIGATION_RIGHT: Int;
	public static var FX_FOCUS_NAVIGATION_UP: Int;
	public static var FX_KEYPRESS_DELETE: Int;
	public static var FX_KEYPRESS_RETURN: Int;
	public static var FX_KEYPRESS_SPACEBAR: Int;
	public static var FX_KEYPRESS_STANDARD: Int;
	public static var FX_KEY_CLICK: Int;
	public static var MODE_CURRENT: Int;
	public static var MODE_INVALID: Int;
	public static var MODE_IN_CALL: Int;
	public static var MODE_NORMAL: Int;
	public static var MODE_RINGTONE: Int;
	public static var RINGER_MODE_CHANGED_ACTION: String;
	public static var RINGER_MODE_NORMAL: Int;
	public static var RINGER_MODE_SILENT: Int;
	public static var RINGER_MODE_VIBRATE: Int;
	public static var SCO_AUDIO_STATE_CONNECTED: Int;
	public static var SCO_AUDIO_STATE_DISCONNECTED: Int;
	public static var SCO_AUDIO_STATE_ERROR: Int;
	public static var STREAM_ALARM: Int;
	public static var STREAM_DTMF: Int;
	public static var STREAM_MUSIC: Int;
	public static var STREAM_NOTIFICATION: Int;
	public static var STREAM_RING: Int;
	public static var STREAM_SYSTEM: Int;
	public static var STREAM_VOICE_CALL: Int;
	public static var USE_DEFAULT_STREAM_TYPE: Int;

	public function adjustStreamVolume(streamType: Int, direction: Int, flags: Int): Void;
	public function adjustSuggestedStreamVolume(direction: Int, suggestedStreamType: Int, flags: Int): Void;
	public function adjustVolume(direction: Int, flags: Int): Void;
	public function getMode(): Int;
	public function getParameters(keys: String): String;
	public function getRingerMode(): Int;
	public function getStreamMaxVolum(streamType: Int): Int;
	public function getStreamVolume(streamType: Int): Int;
	public function isBluetoothA2dpOn(): Bool;
	public function isBluetoothScoAvailableOffCall(): Bool;
	public function isBluetoothScoOn(): Bool;
	public function isMicrophoneMute(): Bool;
	public function isMusicActive(): Bool;
	public function isSpeakerphoneOn(): Bool;
	public function loadSoundEffects(): Void;
	@:overload(function(effectType: Int, volume: Single): Void {})
	public function playSoundEffect(effectType: Int): Void;
	public function setBluetoothScoOn(on: Bool): Void;
	public function setMicrophoneMute(on: Bool): Void;
	public function setMode(mode: Int): Void;
	public function setParameters(keyValuePairs: String): Void;
	public function setRingerMode(ringerMode: Int): Void;
	public function setSpeakerphoneOn(on: Bool): Void;
	public function setStreamVolume(streamType: Int, index: Int, flags: Int): Void;
	public function startBluetoothSco(): Void;
	public function stopBluetoothSco(): Void;
	public function unloadSoundEffects(): Void;
}
